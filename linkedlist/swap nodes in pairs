/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if(!head || !(head->next)) return head;

        ListNode *l1=head,*l2=head->next,*ans=l2;
        
        while(1){
            l1->next=(l2->next);
            l2->next=l1;
            ListNode* temp=l1->next;
            if(!(temp) || !(temp->next)) return ans;//head is the node first which is swaped and becomed second
            l2=(temp->next);
            l1->next=l2;
            l1=temp;
        }
        
    }
};
